// Mocks generated by Mockito 5.0.16 from annotations
// in seed_reader/test/mocks/mock_generator.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:connectivity/connectivity.dart' as _i8;
import 'package:mockito/mockito.dart' as _i1;
import 'package:seed_reader/interactors/gateways/seed_api_gateway.dart' as _i6;
import 'package:seed_reader/interactors/gateways/seed_local_gateway.dart'
    as _i5;
import 'package:seed_reader/interactors/seed_interactor.dart' as _i3;
import 'package:seed_reader/models/seed.dart' as _i2;
import 'package:shared_preferences/shared_preferences.dart' as _i9;

import 'mock_generator.dart' as _i7;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeSeed_0 extends _i1.Fake implements _i2.Seed {}

/// A class which mocks [SeedInteractor].
///
/// See the documentation for Mockito's code generation for more information.
class MockSeedInteractor extends _i1.Mock implements _i3.SeedInteractor {
  MockSeedInteractor() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Seed> fetchSeed() =>
      (super.noSuchMethod(Invocation.method(#fetchSeed, []),
              returnValue: Future<_i2.Seed>.value(_FakeSeed_0()))
          as _i4.Future<_i2.Seed>);
  @override
  bool isValid(_i2.Seed? seed) => (super
          .noSuchMethod(Invocation.method(#isValid, [seed]), returnValue: false)
      as bool);
  @override
  String toString() => super.toString();
}

/// A class which mocks [SeedLocalGateway].
///
/// See the documentation for Mockito's code generation for more information.
class MockSeedLocalGateway extends _i1.Mock implements _i5.SeedLocalGateway {
  MockSeedLocalGateway() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Seed?> fetchSeed() =>
      (super.noSuchMethod(Invocation.method(#fetchSeed, []),
          returnValue: Future<_i2.Seed?>.value()) as _i4.Future<_i2.Seed?>);
  @override
  _i4.Future<void> saveSeed(_i2.Seed? seed) =>
      (super.noSuchMethod(Invocation.method(#saveSeed, [seed]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i4.Future<void>);
  @override
  String toString() => super.toString();
}

/// A class which mocks [SeedApiGateway].
///
/// See the documentation for Mockito's code generation for more information.
class MockSeedApiGateway extends _i1.Mock implements _i6.SeedApiGateway {
  MockSeedApiGateway() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Seed> fetchSeed() =>
      (super.noSuchMethod(Invocation.method(#fetchSeed, []),
              returnValue: Future<_i2.Seed>.value(_FakeSeed_0()))
          as _i4.Future<_i2.Seed>);
  @override
  String toString() => super.toString();
}

/// A class which mocks [MethodMocks].
///
/// See the documentation for Mockito's code generation for more information.
class MockMethodMocks extends _i1.Mock implements _i7.MethodMocks {
  MockMethodMocks() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<bool> futureBoolCallback() =>
      (super.noSuchMethod(Invocation.method(#futureBoolCallback, []),
          returnValue: Future<bool>.value(false)) as _i4.Future<bool>);
  @override
  String toString() => super.toString();
}

/// A class which mocks [Connectivity].
///
/// See the documentation for Mockito's code generation for more information.
class MockConnectivity extends _i1.Mock implements _i8.Connectivity {
  MockConnectivity() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Stream<_i8.ConnectivityResult> get onConnectivityChanged =>
      (super.noSuchMethod(Invocation.getter(#onConnectivityChanged),
              returnValue: Stream<_i8.ConnectivityResult>.empty())
          as _i4.Stream<_i8.ConnectivityResult>);
  @override
  _i4.Future<_i8.ConnectivityResult> checkConnectivity() => (super.noSuchMethod(
          Invocation.method(#checkConnectivity, []),
          returnValue:
              Future<_i8.ConnectivityResult>.value(_i8.ConnectivityResult.wifi))
      as _i4.Future<_i8.ConnectivityResult>);
  @override
  String toString() => super.toString();
}

/// A class which mocks [SharedPreferences].
///
/// See the documentation for Mockito's code generation for more information.
class MockSharedPreferences extends _i1.Mock implements _i9.SharedPreferences {
  MockSharedPreferences() {
    _i1.throwOnMissingStub(this);
  }

  @override
  Set<String> getKeys() => (super.noSuchMethod(Invocation.method(#getKeys, []),
      returnValue: <String>{}) as Set<String>);
  @override
  Object? get(String? key) =>
      (super.noSuchMethod(Invocation.method(#get, [key])) as Object?);
  @override
  bool? getBool(String? key) =>
      (super.noSuchMethod(Invocation.method(#getBool, [key])) as bool?);
  @override
  int? getInt(String? key) =>
      (super.noSuchMethod(Invocation.method(#getInt, [key])) as int?);
  @override
  double? getDouble(String? key) =>
      (super.noSuchMethod(Invocation.method(#getDouble, [key])) as double?);
  @override
  String? getString(String? key) =>
      (super.noSuchMethod(Invocation.method(#getString, [key])) as String?);
  @override
  bool containsKey(String? key) =>
      (super.noSuchMethod(Invocation.method(#containsKey, [key]),
          returnValue: false) as bool);
  @override
  List<String>? getStringList(String? key) =>
      (super.noSuchMethod(Invocation.method(#getStringList, [key]))
          as List<String>?);
  @override
  _i4.Future<bool> setBool(String? key, bool? value) =>
      (super.noSuchMethod(Invocation.method(#setBool, [key, value]),
          returnValue: Future<bool>.value(false)) as _i4.Future<bool>);
  @override
  _i4.Future<bool> setInt(String? key, int? value) =>
      (super.noSuchMethod(Invocation.method(#setInt, [key, value]),
          returnValue: Future<bool>.value(false)) as _i4.Future<bool>);
  @override
  _i4.Future<bool> setDouble(String? key, double? value) =>
      (super.noSuchMethod(Invocation.method(#setDouble, [key, value]),
          returnValue: Future<bool>.value(false)) as _i4.Future<bool>);
  @override
  _i4.Future<bool> setString(String? key, String? value) =>
      (super.noSuchMethod(Invocation.method(#setString, [key, value]),
          returnValue: Future<bool>.value(false)) as _i4.Future<bool>);
  @override
  _i4.Future<bool> setStringList(String? key, List<String>? value) =>
      (super.noSuchMethod(Invocation.method(#setStringList, [key, value]),
          returnValue: Future<bool>.value(false)) as _i4.Future<bool>);
  @override
  _i4.Future<bool> remove(String? key) =>
      (super.noSuchMethod(Invocation.method(#remove, [key]),
          returnValue: Future<bool>.value(false)) as _i4.Future<bool>);
  @override
  _i4.Future<bool> commit() =>
      (super.noSuchMethod(Invocation.method(#commit, []),
          returnValue: Future<bool>.value(false)) as _i4.Future<bool>);
  @override
  _i4.Future<bool> clear() => (super.noSuchMethod(Invocation.method(#clear, []),
      returnValue: Future<bool>.value(false)) as _i4.Future<bool>);
  @override
  _i4.Future<void> reload() =>
      (super.noSuchMethod(Invocation.method(#reload, []),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i4.Future<void>);
  @override
  String toString() => super.toString();
}
